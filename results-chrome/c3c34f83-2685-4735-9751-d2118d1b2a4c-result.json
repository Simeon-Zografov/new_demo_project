{"name": "Manually open new tab", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55658aeabdca <unknown>\n#1 0x55658a9a23f0 <unknown>\n#2 0x55658a9a83ea <unknown>\n#3 0x55658a9aaa78 <unknown>\n#4 0x55658a9aab03 <unknown>\n#5 0x55658a9ec6d8 <unknown>\n#6 0x55658aa16a92 <unknown>\n#7 0x55658a9e5c48 <unknown>\n#8 0x55658aa16c5e <unknown>\n#9 0x55658aa354b3 <unknown>\n#10 0x55658aa16833 <unknown>\n#11 0x55658a9e35a0 <unknown>\n#12 0x55658a9e4ece <unknown>\n#13 0x55658ae75bdb <unknown>\n#14 0x55658ae79b67 <unknown>\n#15 0x55658ae613bc <unknown>\n#16 0x55658ae7a727 <unknown>\n#17 0x55658ae4574f <unknown>\n#18 0x55658ae9a938 <unknown>\n#19 0x55658ae9ab00 <unknown>\n#20 0x55658aeaac46 <unknown>\n#21 0x7f5d7889ca94 <unknown>\n#22 0x7f5d78929c3c <unknown>", "trace": "self = <Tests.test_SocialMediaLinks.TestLogin object at 0x7fe9a7d69310>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a4c8f52c5bef0c1a9edde9d0d4903faa\")>\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('Social Media Links')\n    @allure.title('Manually open new tab')\n    def test_2(self, driver):\n        home_page_obj = HomePage(driver)\n        twitter_url = home_page_obj.get_twitter_button_url()\n        driver.switch_to.new_window('tab')\n        driver.get(twitter_url)\n        with check, allure.step(\"Check twitter heather tex\"):\n>           assert home_page_obj.get_twitter_heather_text() == \"Sauce Labs\"\n\nTests/test_SocialMediaLinks.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/HomePage.py:46: in get_twitter_heather_text\n    return twitter_heather.text\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe9a77b3d10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x55658aeaac46 \\\\u003Cunknown>\\\\n#21 0x7f5d7889ca94 \\\\u003Cunknown>\\\\n#22 0x7f5d78929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=132.0.6834.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55658aeabdca <unknown>\nE       #1 0x55658a9a23f0 <unknown>\nE       #2 0x55658a9a83ea <unknown>\nE       #3 0x55658a9aaa78 <unknown>\nE       #4 0x55658a9aab03 <unknown>\nE       #5 0x55658a9ec6d8 <unknown>\nE       #6 0x55658aa16a92 <unknown>\nE       #7 0x55658a9e5c48 <unknown>\nE       #8 0x55658aa16c5e <unknown>\nE       #9 0x55658aa354b3 <unknown>\nE       #10 0x55658aa16833 <unknown>\nE       #11 0x55658a9e35a0 <unknown>\nE       #12 0x55658a9e4ece <unknown>\nE       #13 0x55658ae75bdb <unknown>\nE       #14 0x55658ae79b67 <unknown>\nE       #15 0x55658ae613bc <unknown>\nE       #16 0x55658ae7a727 <unknown>\nE       #17 0x55658ae4574f <unknown>\nE       #18 0x55658ae9a938 <unknown>\nE       #19 0x55658ae9ab00 <unknown>\nE       #20 0x55658aeaac46 <unknown>\nE       #21 0x7f5d7889ca94 <unknown>\nE       #22 0x7f5d78929c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException"}, "steps": [{"name": "Check twitter heather tex", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55658aeabdca <unknown>\n#1 0x55658a9a23f0 <unknown>\n#2 0x55658a9a83ea <unknown>\n#3 0x55658a9aaa78 <unknown>\n#4 0x55658a9aab03 <unknown>\n#5 0x55658a9ec6d8 <unknown>\n#6 0x55658aa16a92 <unknown>\n#7 0x55658a9e5c48 <unknown>\n#8 0x55658aa16c5e <unknown>\n#9 0x55658aa354b3 <unknown>\n#10 0x55658aa16833 <unknown>\n#11 0x55658a9e35a0 <unknown>\n#12 0x55658a9e4ece <unknown>\n#13 0x55658ae75bdb <unknown>\n#14 0x55658ae79b67 <unknown>\n#15 0x55658ae613bc <unknown>\n#16 0x55658ae7a727 <unknown>\n#17 0x55658ae4574f <unknown>\n#18 0x55658ae9a938 <unknown>\n#19 0x55658ae9ab00 <unknown>\n#20 0x55658aeaac46 <unknown>\n#21 0x7f5d7889ca94 <unknown>\n#22 0x7f5d78929c3c <unknown>\n\n", "trace": "  File \"/home/runner/work/new_demo_project/new_demo_project/Tests/test_SocialMediaLinks.py\", line 38, in test_2\n    assert home_page_obj.get_twitter_heather_text() == \"Sauce Labs\"\n  File \"/home/runner/work/new_demo_project/new_demo_project/Pages/HomePage.py\", line 46, in get_twitter_heather_text\n    return twitter_heather.text\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1738464110493, "stop": 1738464111093}], "parameters": [{"name": "driver", "value": "'Chrome'"}], "start": 1738464109963, "stop": 1738464111095, "uuid": "576a21ac-3a5b-4543-8633-f780be4a28ce", "historyId": "f050d45845ad5be5eb6daa72e6bc38ca", "testCaseId": "4422df44c4acf0e782ea966d0fd7f232", "fullName": "Tests.test_SocialMediaLinks.TestLogin#test_2", "labels": [{"name": "feature", "value": "Social Media Links"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_SocialMediaLinks"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "fv-az1338-766"}, {"name": "thread", "value": "2031-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_SocialMediaLinks"}]}